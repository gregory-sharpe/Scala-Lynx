[0m[[0m[0mdebug[0m] [0m[0m[zinc] IncrementalCompile -----------[0m
[0m[[0m[0mdebug[0m] [0m[0mIncrementalCompile.incrementalCompile[0m
[0m[[0m[0mdebug[0m] [0m[0mprevious = Stamps for: 65 products, 9 sources, 16 libraries[0m
[0m[[0m[0mdebug[0m] [0m[0mcurrent source = Set(${BASE}/src/main/scala/Lynx/org/lynxcats/openSource.scala, ${BASE}/src/main/scala/Lynx/org/lynxcats/Main.scala, ${BASE}/src/main/scala/Lynx/org/lynxcats/Poker/testingFeatures.scala, ${BASE}/src/main/scala/Lynx/org/lynxcats/LynxcatsServer.scala, ${BASE}/src/main/scala/Lynx/org/lynxcats/LynxcatsRoutes.scala, ${BASE}/src/main/scala/Lynx/org/lynxcats/Jokes.scala, ${BASE}/src/main/scala/Lynx/org/lynxcats/HelloWorld.scala, ${BASE}/src/main/scala/Lynx/org/lynxcats/Poker/PokerCards.scala, ${BASE}/src/main/scala/Lynx/org/lynxcats/Poker/Pot.scala, ${BASE}/src/main/scala/Lynx/org/lynxcats/Poker/PokerDeck.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m> initialChanges = InitialChanges(Changes(added = Set(${BASE}/src/main/scala/Lynx/org/lynxcats/Poker/testingFeatures.scala), removed = Set(), changed = Set(${BASE}/src/main/scala/Lynx/org/lynxcats/Poker/PokerCards.scala, ${BASE}/src/main/scala/Lynx/org/lynxcats/Poker/Pot.scala, ${BASE}/src/main/scala/Lynx/org/lynxcats/Poker/PokerDeck.scala), unmodified = ...),Set(),Set(),API Changes: Set())[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes:[0m
[0m[[0m[0mdebug[0m] [0m[0m	removed: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(${BASE}/src/main/scala/Lynx/org/lynxcats/Poker/testingFeatures.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(${BASE}/src/main/scala/Lynx/org/lynxcats/Poker/PokerCards.scala, ${BASE}/src/main/scala/Lynx/org/lynxcats/Poker/Pot.scala, ${BASE}/src/main/scala/Lynx/org/lynxcats/Poker/PokerDeck.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(Lynx.org.lynxcats.Poker.Poker$.Action$.Raise, Lynx.org.lynxcats.Poker.Poker$.Suit, Lynx.org.lynxcats.Poker.Poker$.CardValue, Lynx.org.lynxcats.Poker.potStates, Lynx.org.lynxcats.Poker.Poker$.HandRankings, Lynx.org.lynxcats.Poker.Pot, Lynx.org.lynxcats.Poker.Poker$.User, Lynx.org.lynxcats.Poker.pokerMain, Lynx.org.lynxcats.Poker.Poker, Lynx.org.lynxcats.Poker.Poker$.Card, Lynx.org.lynxcats.Poker.Poker$.Pot, Lynx.org.lynxcats.Poker.potStates$.betted, Lynx.org.lynxcats.Poker.Poker$.Action, Lynx.org.lynxcats.Poker.Deck, Lynx.org.lynxcats.Poker.Poker$.Action$.Bet, Lynx.org.lynxcats.Poker.Poker$.Player)[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(Lynx.org.lynxcats.Poker.Poker$.Action$.Raise, Lynx.org.lynxcats.Poker.Poker$.Suit, Lynx.org.lynxcats.Poker.Poker$.CardValue, Lynx.org.lynxcats.Poker.potStates, Lynx.org.lynxcats.Poker.Poker$.HandRankings, Lynx.org.lynxcats.Poker.Pot, Lynx.org.lynxcats.Poker.Poker$.User, Lynx.org.lynxcats.Poker.pokerMain, Lynx.org.lynxcats.Poker.Poker, Lynx.org.lynxcats.Poker.Poker$.Card, Lynx.org.lynxcats.Poker.Poker$.Pot, Lynx.org.lynxcats.Poker.potStates$.betted, Lynx.org.lynxcats.Poker.Poker$.Action, Lynx.org.lynxcats.Poker.Deck, Lynx.org.lynxcats.Poker.Poker$.Action$.Bet, Lynx.org.lynxcats.Poker.Poker$.Player)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(${BASE}/src/main/scala/Lynx/org/lynxcats/Poker/testingFeatures.scala, ${BASE}/src/main/scala/Lynx/org/lynxcats/Poker/PokerCards.scala, ${BASE}/src/main/scala/Lynx/org/lynxcats/Poker/Pot.scala, ${BASE}/src/main/scala/Lynx/org/lynxcats/Poker/PokerDeck.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Lynx.org.lynxcats.Poker.Poker$.Action$.Raise, Lynx.org.lynxcats.Poker.Poker$.Suit, Lynx.org.lynxcats.Poker.Poker$.CardValue, Lynx.org.lynxcats.Poker.potStates, Lynx.org.lynxcats.Poker.Poker$.HandRankings, Lynx.org.lynxcats.Poker.Pot, Lynx.org.lynxcats.Poker.Poker$.User, Lynx.org.lynxcats.Poker.pokerMain, Lynx.org.lynxcats.Poker.Poker, Lynx.org.lynxcats.Poker.Poker$.Card, Lynx.org.lynxcats.Poker.Poker$.Pot, Lynx.org.lynxcats.Poker.potStates$.betted, Lynx.org.lynxcats.Poker.Poker$.Action, Lynx.org.lynxcats.Poker.Deck, Lynx.org.lynxcats.Poker.Poker$.Action$.Bet, Lynx.org.lynxcats.Poker.Poker$.Player[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding Lynx.org.lynxcats.Poker.potStates$.betted by Lynx.org.lynxcats.Poker.potStates[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding Lynx.org.lynxcats.Poker.Poker$.Action$.Bet by Lynx.org.lynxcats.Poker.Poker$.Action[0m
[0m[[0m[0mdebug[0m] [0m[0mcompilation cycle 1[0m
[0m[[0m[0minfo[0m] [0m[0mcompiling 4 Scala sources to C:\Users\grego\OneDrive\Scala-Lynx\lynxcats\target\scala-3.3.0\classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mReturning already retrieved and compiled bridge: C:\Users\grego\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala3-sbt-bridge\3.3.0\scala3-sbt-bridge-3.3.0.jar.[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 4281f4ae for Scala Compiler version 3.3.0[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-encoding[0m
[0m[[0m[0mdebug[0m] [0m[0m	utf8[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Users\grego\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala3-library_3\3.3.0\scala3-library_3-3.3.0.jar;C:\Users\grego\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala-library\2.13.10\scala-library-2.13.10.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Users\grego\OneDrive\Scala-Lynx\lynxcats\target\scala-3.3.0\classes;C:\Users\grego\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\http4s\http4s-ember-server_3\0.23.23\http4s-ember-server_3-0.23.23.jar;C:\Users\grego\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\http4s\http4s-ember-client_3\0.23.23\http4s-ember-client_3-0.23.23.jar;C:\Users\grego\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\http4s\http4s-circe_3\0.23.23\http4s-circe_3-0.23.23.jar;C:\Users\grego\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\http4s\http4s-dsl_3\0.23.23\http4s-dsl_3-0.23.23.jar;C:\Users\grego\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\ch\qos\logback\logback-classic\1.4.11\logback-classic-1.4.11.jar;C:\Users\grego\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\http4s\http4s-ember-core_3\0.23.23\http4s-ember-core_3-0.23.23.jar;C:\Users\grego\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\http4s\http4s-server_3\0.23.23\http4s-server_3-0.23.23.jar;C:\Users\grego\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\typelevel\log4cats-slf4j_3\2.6.0\log4cats-slf4j_3-2.6.0.jar;C:\Users\grego\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\http4s\http4s-client_3\0.23.23\http4s-client_3-0.23.23.jar;C:\Users\grego\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\typelevel\keypool_3\0.4.8\keypool_3-0.4.8.jar;C:\Users\grego\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\http4s\http4s-core_3\0.23.23\http4s-core_3-0.23.23.jar;C:\Users\grego\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\http4s\http4s-jawn_3\0.23.23\http4s-jawn_3-0.23.23.jar;C:\Users\grego\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\io\circe\circe-core_3\0.14.5\circe-core_3-0.14.5.jar;C:\Users\grego\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\io\circe\circe-jawn_3\0.14.5\circe-jawn_3-0.14.5.jar;C:\Users\grego\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\ch\qos\logback\logback-core\1.4.11\logback-core-1.4.11.jar;C:\Users\grego\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\slf4j\slf4j-api\2.0.7\slf4j-api-2.0.7.jar;C:\Users\grego\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\typelevel\log4cats-core_3\2.6.0\log4cats-core_3-2.6.0.jar;C:\Users\grego\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\com\twitter\hpack\1.0.2\hpack-1.0.2.jar;C:\Users\grego\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\typelevel\cats-effect_3\3.5.0\cats-effect_3-3.5.0.jar;C:\Users\grego\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\typelevel\cats-core_3\2.9.0\cats-core_3-2.9.0.jar;C:\Users\grego\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\typelevel\cats-effect-std_3\3.5.1\cats-effect-std_3-3.5.1.jar;C:\Users\grego\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\typelevel\case-insensitive_3\1.4.0\case-insensitive_3-1.4.0.jar;C:\Users\grego\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\typelevel\cats-parse_3\0.3.10\cats-parse_3-0.3.10.jar;C:\Users\grego\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\http4s\http4s-crypto_3\0.2.4\http4s-crypto_3-0.2.4.jar;C:\Users\grego\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\co\fs2\fs2-core_3\3.7.0\fs2-core_3-3.7.0.jar;C:\Users\grego\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\co\fs2\fs2-io_3\3.7.0\fs2-io_3-3.7.0.jar;C:\Users\grego\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\com\comcast\ip4s-core_3\3.3.0\ip4s-core_3-3.3.0.jar;C:\Users\grego\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\typelevel\literally_3\1.1.0\literally_3-1.1.0.jar;C:\Users\grego\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scodec\scodec-bits_3\1.1.37\scodec-bits_3-1.1.37.jar;C:\Users\grego\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\typelevel\vault_3\3.5.0\vault_3-3.5.0.jar;C:\Users\grego\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\log4s\log4s_3\1.10.0\log4s_3-1.10.0.jar;C:\Users\grego\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\typelevel\jawn-fs2_3\2.4.0\jawn-fs2_3-2.4.0.jar;C:\Users\grego\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\typelevel\jawn-parser_3\1.5.1\jawn-parser_3-1.5.1.jar;C:\Users\grego\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\io\circe\circe-numbers_3\0.14.5\circe-numbers_3-0.14.5.jar;C:\Users\grego\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\typelevel\cats-effect-kernel_3\3.5.1\cats-effect-kernel_3-3.5.1.jar;C:\Users\grego\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\typelevel\cats-kernel_3\2.9.0\cats-kernel_3-2.9.0.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 1.4972311 s[0m
[0m[[0m[0mdebug[0m] [0m[0mdone compiling[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Lynx.org.lynxcats.Poker.Pot$package...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Lynx.org.lynxcats.Poker.Pot$package[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Lynx.org.lynxcats.Poker.Pot$package)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Lynx.org.lynxcats.Poker.Pot$package,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(Pot$package;init;$,[Default]), UsedName(Players,[Default]), UsedName(equals,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(toString,[Default]), UsedName(potSize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(wait,[Default]), UsedName(bet,[Default]), UsedName(Pot$package,[Default]), UsedName(notifyAll,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(Object;init;,[Default]), UsedName(bettableStates,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName($asInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]))) invalidates 1 classes due to The Lynx.org.lynxcats.Poker.Pot$package has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(Pot$package;init;$,[Default]), UsedName(Players,[Default]), UsedName(equals,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(toString,[Default]), UsedName(potSize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(wait,[Default]), UsedName(bet,[Default]), UsedName(Pot$package,[Default]), UsedName(notifyAll,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(Object;init;,[Default]), UsedName(bettableStates,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName($asInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(Lynx.org.lynxcats.Poker.Pot$package)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Lynx.org.lynxcats.Poker.testingFeatures...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Lynx.org.lynxcats.Poker.testingFeatures[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Lynx.org.lynxcats.Poker.testingFeatures)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Lynx.org.lynxcats.Poker.testingFeatures,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(testingFeatures;init;$,[Default]), UsedName(equals,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(users,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(repeat$default$3,[Default]), UsedName(ne,[Default]), UsedName(wait,[Default]), UsedName(traverseScratch,[Default]), UsedName(notifyAll,[Default]), UsedName(y,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(Object;init;,[Default]), UsedName(repeat,[Default]), UsedName(isInstanceOf,[Default]), UsedName(testingFeatures,[Default]), UsedName(clone,[Default]), UsedName($asInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]))) invalidates 1 classes due to The Lynx.org.lynxcats.Poker.testingFeatures has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(testingFeatures;init;$,[Default]), UsedName(equals,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(users,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(repeat$default$3,[Default]), UsedName(ne,[Default]), UsedName(wait,[Default]), UsedName(traverseScratch,[Default]), UsedName(notifyAll,[Default]), UsedName(y,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(Object;init;,[Default]), UsedName(repeat,[Default]), UsedName(isInstanceOf,[Default]), UsedName(testingFeatures,[Default]), UsedName(clone,[Default]), UsedName($asInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(Lynx.org.lynxcats.Poker.testingFeatures)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Lynx.org.lynxcats.Poker.Poker$.Pot...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Lynx.org.lynxcats.Poker.Poker$.Pot[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Lynx.org.lynxcats.Poker.Poker$.Pot)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Lynx.org.lynxcats.Poker.Poker$.Pot,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(AllIn,[Default]), UsedName(Raise,[Default]), UsedName(Serializable;init;,[Default]), UsedName(equals,[Default]), UsedName(productElementName,[Default]), UsedName(_1,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(toString,[Default]), UsedName(Pot;init;$,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(ne,[Default]), UsedName(wait,[Default]), UsedName(Mirror;init;,[Default]), UsedName(Product;init;,[Default]), UsedName(copy$default$1,[Default]), UsedName(copy$default$2,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName(Pot;init;,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(Bet,[Default]), UsedName(MirroredLabel,[Default]), UsedName(Check,[Default]), UsedName(copy,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(Object;init;,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(MirroredMonoType,[Default]), UsedName(canEqual,[Default]), UsedName($asInstanceOf,[Default]), UsedName(players,[Default]), UsedName(folded,[Default]), UsedName(_2,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(fromProduct,[Default]), UsedName(Pot,[Default]), UsedName(apply,[Default]), UsedName(productPrefix,[Default]), UsedName(value,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(unapply,[Default]))) invalidates 1 classes due to The Lynx.org.lynxcats.Poker.Poker$.Pot has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(AllIn,[Default]), UsedName(Raise,[Default]), UsedName(Serializable;init;,[Default]), UsedName(equals,[Default]), UsedName(productElementName,[Default]), UsedName(_1,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(toString,[Default]), UsedName(Pot;init;$,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(ne,[Default]), UsedName(wait,[Default]), UsedName(Mirror;init;,[Default]), UsedName(Product;init;,[Default]), UsedName(copy$default$1,[Default]), UsedName(copy$default$2,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName(Pot;init;,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(Bet,[Default]), UsedName(MirroredLabel,[Default]), UsedName(Check,[Default]), UsedName(copy,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(Object;init;,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(MirroredMonoType,[Default]), UsedName(canEqual,[Default]), UsedName($asInstanceOf,[Default]), UsedName(players,[Default]), UsedName(folded,[Default]), UsedName(_2,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(fromProduct,[Default]), UsedName(Pot,[Default]), UsedName(apply,[Default]), UsedName(productPrefix,[Default]), UsedName(value,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(unapply,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(Lynx.org.lynxcats.Poker.Poker$.Pot)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Lynx.org.lynxcats.Poker.potStates$.NoAdditionalBets...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Lynx.org.lynxcats.Poker.potStates$.NoAdditionalBets[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Lynx.org.lynxcats.Poker.potStates$.NoAdditionalBets)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Lynx.org.lynxcats.Poker.potStates$.NoAdditionalBets,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(NoAdditionalBets,[Default]), UsedName(Serializable;init;,[Default]), UsedName(equals,[Default]), UsedName(productElementName,[Default]), UsedName(_1,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(ne,[Default]), UsedName(wait,[Default]), UsedName(Mirror;init;,[Default]), UsedName(Product;init;,[Default]), UsedName(copy$default$1,[Default]), UsedName(copy$default$2,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName(player,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(MirroredLabel,[Default]), UsedName(copy,[Default]), UsedName(ordinal,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(Object;init;,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(MirroredMonoType,[Default]), UsedName(canEqual,[Default]), UsedName($asInstanceOf,[Default]), UsedName(_2,[Default]), UsedName(notify,[Default]), UsedName(NoAdditionalBets;init;,[Default]), UsedName(eq,[Default]), UsedName(potStates;init;,[Default]), UsedName(finalize,[Default]), UsedName(NoAdditionalBets;init;$,[Default]), UsedName(fromProduct,[Default]), UsedName(apply,[Default]), UsedName(productPrefix,[Default]), UsedName(value,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(Enum;init;,[Default]), UsedName(unapply,[Default]))) invalidates 1 classes due to The Lynx.org.lynxcats.Poker.potStates$.NoAdditionalBets has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(NoAdditionalBets,[Default]), UsedName(Serializable;init;,[Default]), UsedName(equals,[Default]), UsedName(productElementName,[Default]), UsedName(_1,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(ne,[Default]), UsedName(wait,[Default]), UsedName(Mirror;init;,[Default]), UsedName(Product;init;,[Default]), UsedName(copy$default$1,[Default]), UsedName(copy$default$2,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName(player,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(MirroredLabel,[Default]), UsedName(copy,[Default]), UsedName(ordinal,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(Object;init;,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(MirroredMonoType,[Default]), UsedName(canEqual,[Default]), UsedName($asInstanceOf,[Default]), UsedName(_2,[Default]), UsedName(notify,[Default]), UsedName(NoAdditionalBets;init;,[Default]), UsedName(eq,[Default]), UsedName(potStates;init;,[Default]), UsedName(finalize,[Default]), UsedName(NoAdditionalBets;init;$,[Default]), UsedName(fromProduct,[Default]), UsedName(apply,[Default]), UsedName(productPrefix,[Default]), UsedName(value,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(Enum;init;,[Default]), UsedName(unapply,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(Lynx.org.lynxcats.Poker.potStates$.NoAdditionalBets)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Lynx.org.lynxcats.Poker.Pot...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Lynx.org.lynxcats.Poker.Pot[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Lynx.org.lynxcats.Poker.Pot)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Lynx.org.lynxcats.Poker.Pot,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(AllIn,[Default]), UsedName(Raise,[Default]), UsedName(state,[Default]), UsedName(Serializable;init;,[Default]), UsedName(equals,[Default]), UsedName(productElementName,[Default]), UsedName(_1,[Default]), UsedName(addBigBlind,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(check,[Default]), UsedName(ne,[Default]), UsedName(wait,[Default]), UsedName(Mirror;init;,[Default]), UsedName(bet,[Default]), UsedName(Product;init;,[Default]), UsedName(copy$default$1,[Default]), UsedName(copy$default$2,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName(empty,[Default]), UsedName(Pot;init;,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(Bet,[Default]), UsedName(MirroredLabel,[Default]), UsedName(Check,[Default]), UsedName(copy,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(Object;init;,[Default]), UsedName(isInstanceOf,[Default]), UsedName(_3,[Default]), UsedName(clone,[Default]), UsedName(MirroredMonoType,[Default]), UsedName(canEqual,[Default]), UsedName($asInstanceOf,[Default]), UsedName(players,[Default]), UsedName(folded,[Default]), UsedName(_2,[Default]), UsedName(notify,[Default]), UsedName(copy$default$3,[Default]), UsedName(eq,[Default]), UsedName(fold,[Default]), UsedName(finalize,[Default]), UsedName(addSmallBlind,[Default]), UsedName(fromProduct,[Default]), UsedName(Pot,[Default]), UsedName(apply,[Default]), UsedName(productPrefix,[Default]), UsedName(value,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(unapply,[Default]))) invalidates 1 classes due to The Lynx.org.lynxcats.Poker.Pot has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(AllIn,[Default]), UsedName(Raise,[Default]), UsedName(state,[Default]), UsedName(Serializable;init;,[Default]), UsedName(equals,[Default]), UsedName(productElementName,[Default]), UsedName(_1,[Default]), UsedName(addBigBlind,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(check,[Default]), UsedName(ne,[Default]), UsedName(wait,[Default]), UsedName(Mirror;init;,[Default]), UsedName(bet,[Default]), UsedName(Product;init;,[Default]), UsedName(copy$default$1,[Default]), UsedName(copy$default$2,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName(empty,[Default]), UsedName(Pot;init;,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(Bet,[Default]), UsedName(MirroredLabel,[Default]), UsedName(Check,[Default]), UsedName(copy,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(Object;init;,[Default]), UsedName(isInstanceOf,[Default]), UsedName(_3,[Default]), UsedName(clone,[Default]), UsedName(MirroredMonoType,[Default]), UsedName(canEqual,[Default]), UsedName($asInstanceOf,[Default]), UsedName(players,[Default]), UsedName(folded,[Default]), UsedName(_2,[Default]), UsedName(notify,[Default]), UsedName(copy$default$3,[Default]), UsedName(eq,[Default]), UsedName(fold,[Default]), UsedName(finalize,[Default]), UsedName(addSmallBlind,[Default]), UsedName(fromProduct,[Default]), UsedName(Pot,[Default]), UsedName(apply,[Default]), UsedName(productPrefix,[Default]), UsedName(value,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(unapply,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(Lynx.org.lynxcats.Poker.Pot)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Lynx.org.lynxcats.Poker.potStates$.betted...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Lynx.org.lynxcats.Poker.potStates$.betted[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Lynx.org.lynxcats.Poker.potStates$.betted)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Lynx.org.lynxcats.Poker.potStates$.betted,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(Serializable;init;,[Default]), UsedName(equals,[Default]), UsedName(productElementName,[Default]), UsedName(_1,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(toString,[Default]), UsedName(betted;init;$,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(ne,[Default]), UsedName(wait,[Default]), UsedName(Mirror;init;,[Default]), UsedName(Product;init;,[Default]), UsedName(copy$default$1,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName(betted;init;,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(MirroredLabel,[Default]), UsedName(copy,[Default]), UsedName(ordinal,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(Object;init;,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(MirroredMonoType,[Default]), UsedName(canEqual,[Default]), UsedName($asInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(potStates;init;,[Default]), UsedName(finalize,[Default]), UsedName(fromProduct,[Default]), UsedName(amount,[Default]), UsedName(apply,[Default]), UsedName(productPrefix,[Default]), UsedName(betted,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(Enum;init;,[Default]), UsedName(unapply,[Default]))) invalidates 1 classes due to The Lynx.org.lynxcats.Poker.potStates$.betted has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(Serializable;init;,[Default]), UsedName(equals,[Default]), UsedName(productElementName,[Default]), UsedName(_1,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(toString,[Default]), UsedName(betted;init;$,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(ne,[Default]), UsedName(wait,[Default]), UsedName(Mirror;init;,[Default]), UsedName(Product;init;,[Default]), UsedName(copy$default$1,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName(betted;init;,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(MirroredLabel,[Default]), UsedName(copy,[Default]), UsedName(ordinal,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(Object;init;,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(MirroredMonoType,[Default]), UsedName(canEqual,[Default]), UsedName($asInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(potStates;init;,[Default]), UsedName(finalize,[Default]), UsedName(fromProduct,[Default]), UsedName(amount,[Default]), UsedName(apply,[Default]), UsedName(productPrefix,[Default]), UsedName(betted,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(Enum;init;,[Default]), UsedName(unapply,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(Lynx.org.lynxcats.Poker.potStates$.betted)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Lynx.org.lynxcats.Poker.potStates$.NoBigBlind...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Lynx.org.lynxcats.Poker.potStates$.NoBigBlind[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Lynx.org.lynxcats.Poker.potStates$.NoBigBlind)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Lynx.org.lynxcats.Poker.potStates$.NoBigBlind,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(Serializable;init;,[Default]), UsedName(equals,[Default]), UsedName(productElementName,[Default]), UsedName(_1,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(NoBigBlind,[Default]), UsedName(ne,[Default]), UsedName(wait,[Default]), UsedName(Mirror;init;,[Default]), UsedName(Product;init;,[Default]), UsedName(copy$default$1,[Default]), UsedName(copy$default$2,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName(player,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(MirroredLabel,[Default]), UsedName(NoBigBlind;init;,[Default]), UsedName(copy,[Default]), UsedName(ordinal,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(Object;init;,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(MirroredMonoType,[Default]), UsedName(canEqual,[Default]), UsedName($asInstanceOf,[Default]), UsedName(_2,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(potStates;init;,[Default]), UsedName(finalize,[Default]), UsedName(fromProduct,[Default]), UsedName(NoBigBlind;init;$,[Default]), UsedName(apply,[Default]), UsedName(productPrefix,[Default]), UsedName(value,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(Enum;init;,[Default]), UsedName(unapply,[Default]))) invalidates 1 classes due to The Lynx.org.lynxcats.Poker.potStates$.NoBigBlind has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(Serializable;init;,[Default]), UsedName(equals,[Default]), UsedName(productElementName,[Default]), UsedName(_1,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(NoBigBlind,[Default]), UsedName(ne,[Default]), UsedName(wait,[Default]), UsedName(Mirror;init;,[Default]), UsedName(Product;init;,[Default]), UsedName(copy$default$1,[Default]), UsedName(copy$default$2,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName(player,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(MirroredLabel,[Default]), UsedName(NoBigBlind;init;,[Default]), UsedName(copy,[Default]), UsedName(ordinal,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(Object;init;,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(MirroredMonoType,[Default]), UsedName(canEqual,[Default]), UsedName($asInstanceOf,[Default]), UsedName(_2,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(potStates;init;,[Default]), UsedName(finalize,[Default]), UsedName(fromProduct,[Default]), UsedName(NoBigBlind;init;$,[Default]), UsedName(apply,[Default]), UsedName(productPrefix,[Default]), UsedName(value,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(Enum;init;,[Default]), UsedName(unapply,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(Lynx.org.lynxcats.Poker.potStates$.NoBigBlind)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Lynx.org.lynxcats.Poker.potStates$.CurrentBet...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Lynx.org.lynxcats.Poker.potStates$.CurrentBet[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Lynx.org.lynxcats.Poker.potStates$.CurrentBet)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Lynx.org.lynxcats.Poker.potStates$.CurrentBet,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(Serializable;init;,[Default]), UsedName(equals,[Default]), UsedName(productElementName,[Default]), UsedName(_1,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(ne,[Default]), UsedName(wait,[Default]), UsedName(Mirror;init;,[Default]), UsedName(Product;init;,[Default]), UsedName(copy$default$1,[Default]), UsedName(minBet,[Default]), UsedName(copy$default$2,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName(player,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(MirroredLabel,[Default]), UsedName(copy,[Default]), UsedName(ordinal,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(Object;init;,[Default]), UsedName(isInstanceOf,[Default]), UsedName(_3,[Default]), UsedName(clone,[Default]), UsedName(MirroredMonoType,[Default]), UsedName(canEqual,[Default]), UsedName($asInstanceOf,[Default]), UsedName(_2,[Default]), UsedName(notify,[Default]), UsedName(copy$default$3,[Default]), UsedName(eq,[Default]), UsedName(potStates;init;,[Default]), UsedName(CurrentBet;init;,[Default]), UsedName(finalize,[Default]), UsedName(CurrentBet,[Default]), UsedName(fromProduct,[Default]), UsedName(CurrentBet;init;$,[Default]), UsedName(apply,[Default]), UsedName(productPrefix,[Default]), UsedName(value,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(Enum;init;,[Default]), UsedName(unapply,[Default]))) invalidates 1 classes due to The Lynx.org.lynxcats.Poker.potStates$.CurrentBet has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(Serializable;init;,[Default]), UsedName(equals,[Default]), UsedName(productElementName,[Default]), UsedName(_1,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(ne,[Default]), UsedName(wait,[Default]), UsedName(Mirror;init;,[Default]), UsedName(Product;init;,[Default]), UsedName(copy$default$1,[Default]), UsedName(minBet,[Default]), UsedName(copy$default$2,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName(player,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(MirroredLabel,[Default]), UsedName(copy,[Default]), UsedName(ordinal,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(Object;init;,[Default]), UsedName(isInstanceOf,[Default]), UsedName(_3,[Default]), UsedName(clone,[Default]), UsedName(MirroredMonoType,[Default]), UsedName(canEqual,[Default]), UsedName($asInstanceOf,[Default]), UsedName(_2,[Default]), UsedName(notify,[Default]), UsedName(copy$default$3,[Default]), UsedName(eq,[Default]), UsedName(potStates;init;,[Default]), UsedName(CurrentBet;init;,[Default]), UsedName(finalize,[Default]), UsedName(CurrentBet,[Default]), UsedName(fromProduct,[Default]), UsedName(CurrentBet;init;$,[Default]), UsedName(apply,[Default]), UsedName(productPrefix,[Default]), UsedName(value,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(Enum;init;,[Default]), UsedName(unapply,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(Lynx.org.lynxcats.Poker.potStates$.CurrentBet)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Lynx.org.lynxcats.Poker.Poker...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Lynx.org.lynxcats.Poker.Poker[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Lynx.org.lynxcats.Poker.Poker)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of Lynx.org.lynxcats.Poker.testingFeatures. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of Lynx.org.lynxcats.Poker.Pot. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of Lynx.org.lynxcats.Poker.potStates$.CurrentBet. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of Lynx.org.lynxcats.Poker.potStates$.NoAdditionalBets. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of Lynx.org.lynxcats.Poker.Deck. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of Lynx.org.lynxcats.Poker.Pot$package. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of Lynx.org.lynxcats.Poker.potStates$.NoBigBlind. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of Lynx.org.lynxcats.Poker.potStates$.NoSmallBlind. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Lynx.org.lynxcats.Poker.Poker,ModifiedNames(changes = UsedName(Pot,[Default]))) invalidates 1 classes due to The Lynx.org.lynxcats.Poker.Poker has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(Pot,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(Lynx.org.lynxcats.Poker.Poker)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Lynx.org.lynxcats.Poker.potStates...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Lynx.org.lynxcats.Poker.potStates[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding Lynx.org.lynxcats.Poker.potStates$.NoBigBlind by Lynx.org.lynxcats.Poker.potStates[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding Lynx.org.lynxcats.Poker.potStates$.NoAdditionalBets by Lynx.org.lynxcats.Poker.potStates[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding Lynx.org.lynxcats.Poker.potStates$.NoSmallBlind by Lynx.org.lynxcats.Poker.potStates[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding Lynx.org.lynxcats.Poker.potStates$.CurrentBet by Lynx.org.lynxcats.Poker.potStates[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Lynx.org.lynxcats.Poker.potStates, Lynx.org.lynxcats.Poker.potStates$.CurrentBet, Lynx.org.lynxcats.Poker.potStates$.NoAdditionalBets, Lynx.org.lynxcats.Poker.potStates$.NoBigBlind, Lynx.org.lynxcats.Poker.potStates$.NoSmallBlind)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Lynx.org.lynxcats.Poker.potStates,ModifiedNames(changes = UsedName(NoAdditionalBets,[Default]), UsedName(potStates,[Default]), UsedName(MissingBigBlind,[Default]), UsedName(NoBigBlind,[Default]), UsedName(NoSmallBlind,[Default]), UsedName(MissingSmallBlind,[Default]), UsedName(noAdditionalBets,[Default]), UsedName(CurrentBet,[Default]), UsedName(betted,[Default]))) invalidates 5 classes due to The Lynx.org.lynxcats.Poker.potStates has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(NoAdditionalBets,[Default]), UsedName(potStates,[Default]), UsedName(MissingBigBlind,[Default]), UsedName(NoBigBlind,[Default]), UsedName(NoSmallBlind,[Default]), UsedName(MissingSmallBlind,[Default]), UsedName(noAdditionalBets,[Default]), UsedName(CurrentBet,[Default]), UsedName(betted,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(Lynx.org.lynxcats.Poker.potStates, Lynx.org.lynxcats.Poker.potStates$.CurrentBet, Lynx.org.lynxcats.Poker.potStates$.NoAdditionalBets, Lynx.org.lynxcats.Poker.potStates$.NoBigBlind, Lynx.org.lynxcats.Poker.potStates$.NoSmallBlind)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Lynx.org.lynxcats.Poker.potStates$.NoSmallBlind...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Lynx.org.lynxcats.Poker.potStates$.NoSmallBlind[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Lynx.org.lynxcats.Poker.potStates$.NoSmallBlind)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Lynx.org.lynxcats.Poker.potStates$.NoSmallBlind,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(NoSmallBlind;init;,[Default]), UsedName(Serializable;init;,[Default]), UsedName(equals,[Default]), UsedName(productElementName,[Default]), UsedName(_1,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(ne,[Default]), UsedName(wait,[Default]), UsedName(Mirror;init;,[Default]), UsedName(Product;init;,[Default]), UsedName(copy$default$1,[Default]), UsedName(copy$default$2,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName(NoSmallBlind,[Default]), UsedName(player,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(MirroredLabel,[Default]), UsedName(copy,[Default]), UsedName(ordinal,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(Object;init;,[Default]), UsedName(NoSmallBlind;init;$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(MirroredMonoType,[Default]), UsedName(canEqual,[Default]), UsedName($asInstanceOf,[Default]), UsedName(_2,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(potStates;init;,[Default]), UsedName(finalize,[Default]), UsedName(fromProduct,[Default]), UsedName(apply,[Default]), UsedName(productPrefix,[Default]), UsedName(value,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(Enum;init;,[Default]), UsedName(unapply,[Default]))) invalidates 1 classes due to The Lynx.org.lynxcats.Poker.potStates$.NoSmallBlind has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(NoSmallBlind;init;,[Default]), UsedName(Serializable;init;,[Default]), UsedName(equals,[Default]), UsedName(productElementName,[Default]), UsedName(_1,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(ne,[Default]), UsedName(wait,[Default]), UsedName(Mirror;init;,[Default]), UsedName(Product;init;,[Default]), UsedName(copy$default$1,[Default]), UsedName(copy$default$2,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName(NoSmallBlind,[Default]), UsedName(player,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(MirroredLabel,[Default]), UsedName(copy,[Default]), UsedName(ordinal,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(Object;init;,[Default]), UsedName(NoSmallBlind;init;$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(MirroredMonoType,[Default]), UsedName(canEqual,[Default]), UsedName($asInstanceOf,[Default]), UsedName(_2,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(potStates;init;,[Default]), UsedName(finalize,[Default]), UsedName(fromProduct,[Default]), UsedName(apply,[Default]), UsedName(productPrefix,[Default]), UsedName(value,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(Enum;init;,[Default]), UsedName(unapply,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(Lynx.org.lynxcats.Poker.potStates$.NoSmallBlind)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: [0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0mFinal step, transitive dependencies:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNo classes were invalidated.[0m
